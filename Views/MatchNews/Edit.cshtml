@model BussinessCupApi.Models.MatchNews

@{
    ViewData["Title"] = "Haber Düzenle";
    if (User.IsInRole("Admin"))
    {
        Layout = "_AdminLayout";
    }
    else if (User.IsInRole("CityAdmin"))
    {
        Layout = "_CityAdminLayout";
    }
}


<div class="container mx-auto px-4 py-8">
    <div class="bg-gray-800 rounded-lg shadow-lg p-6 mb-8">
        <h2 class="text-2xl font-bold text-yellow-500 mb-6">Haber Düzenle</h2>
    </div>

    <form asp-action="Edit" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="Id" />
        <input type="hidden" asp-for="CreatedDate" />
        <input type="hidden" asp-for="Published" /> 
        <input type="hidden" asp-for="MatchNewsMainPhoto" id="currentMainPhoto" value="@Model.MatchNewsMainPhoto" />


        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
            <div class="form-group mb-3">
                <label asp-for="Title" class="block text-sm font-medium text-gray-300 mb-1">Başlık</label>
                <input asp-for="Title" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-yellow-500 focus:ring-1 focus:ring-yellow-500" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Subtitle" class="block text-sm font-medium text-gray-300 mb-1">Alt Başlık</label>
                <input asp-for="Subtitle" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-yellow-500 focus:ring-1 focus:ring-yellow-500" />
                <span asp-validation-for="Subtitle" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="DetailsTitle" class="block text-sm font-medium text-gray-300 mb-1">Detay Başlığı</label>
                <input asp-for="DetailsTitle" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-yellow-500 focus:ring-1 focus:ring-yellow-500" />
                <span asp-validation-for="DetailsTitle" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Details" class="block text-sm font-medium text-gray-300 mb-1">Detaylar</label>
                <textarea asp-for="Details" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:border-yellow-500 focus:ring-1 focus:ring-yellow-500" rows="5"></textarea>
                <span asp-validation-for="Details" class="text-danger"></span>
            </div>
        </div>

        <div id="city-team-fields" class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-4">
            <div class="form-group mb-3">
                <label asp-for="CityID" class="block text-sm font-medium text-gray-300 mb-1">Şehir</label>
                <select asp-for="CityID" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white" asp-items="@(new SelectList(ViewBag.Cities, "CityID", "Name", Model.CityID))">
                    <option value="">Şehir Seçiniz</option>
                </select>
                <span asp-validation-for="CityID" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="TeamID" class="block text-sm font-medium text-gray-300 mb-1">Takım</label>
                <select asp-for="TeamID" class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white" asp-items="@(new SelectList(ViewBag.Teams, "TeamID", "Name", Model.TeamID))">
                    <option value="">Takım Seçiniz</option>
                </select>
                <span asp-validation-for="TeamID" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group mb-3 flex items-center">
            <input asp-for="IsMainNews" type="checkbox" class="mr-2 accent-yellow-500 scale-125" id="IsMainNews" />
            <label asp-for="IsMainNews" class="text-lg font-bold text-yellow-400 mb-1 flex items-center">
                <i class="fas fa-star mr-1"></i> Ana Haber
            </label>
            <span asp-validation-for="IsMainNews" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label class="block text-sm font-medium text-gray-300 mb-1">Ana Fotoğraf</label>
            <div id="mainPhotoPreview" class="mb-2">
                @if (!string.IsNullOrEmpty(Model.MatchNewsMainPhoto))
                {
                    <div class="relative group">
                        <img src="@Model.MatchNewsMainPhoto" alt="Ana Fotoğraf" 
                             class="h-24 w-24 object-cover rounded cursor-pointer" 
                             onclick="openModal('@Model.MatchNewsMainPhoto')" />
                        <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                            <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                        </div>
                    </div>
                }
            </div>
            <input type="file" name="MainPhoto" id="mainPhotoInput" class="w-full text-sm text-gray-400 file:mr-4 file:py-2 file:px-4
                   file:rounded-md file:border-0 file:text-sm file:font-semibold
                   file:bg-yellow-500 file:text-gray-900 hover:file:bg-yellow-600
                   cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-yellow-500" 
                   accept="image/*" onchange="previewMainPhoto(this)" />
        </div>

        <div class="form-group mb-3">
            <label class="block text-sm font-medium text-gray-300 mb-1">Ek Fotoğraflar</label>
            <div id="additionalPhotosPreview" class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4 mb-2">
                @if (Model.Photos != null && Model.Photos.Any())
                {
                    @foreach (var photo in Model.Photos)
                    {
                        <div class="relative group">
                            <img src="@photo.PhotoUrl" alt="Haber Fotoğrafı" 
                                 class="h-24 w-full object-cover rounded cursor-pointer" 
                                 onclick="openModal('@photo.PhotoUrl')" />
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                                <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                            </div>
                            <button type="button" 
                                    onclick="deletePhoto(@photo.Id, this)" 
                                    class="absolute top-1 right-1 bg-red-500 hover:bg-red-600 text-white rounded-full p-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    }
                }
            </div>
            <input type="file" name="ImageFiles" id="additionalPhotosInput" class="w-full text-sm text-gray-400 file:mr-4 file:py-2 file:px-4
                   file:rounded-md file:border-0 file:text-sm file:font-semibold
                   file:bg-yellow-500 file:text-gray-900 hover:file:bg-yellow-600
                   cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-yellow-500" 
                   accept="image/*" multiple onchange="previewAdditionalPhotos(this)" />
        </div>

        <div class="flex space-x-4">
            <button type="submit" class="bg-yellow-500 hover:bg-yellow-600 text-gray-900 font-bold py-2 px-4 rounded transition-colors">
                <i class="fas fa-save mr-1"></i> Kaydet
            </button>
            <a asp-action="Index" class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded transition-colors">
                <i class="fas fa-arrow-left mr-1"></i> Listeye Dön
            </a>
        </div>
    </form>
</div>

<!-- Modal -->
<div id="imageModal" class="fixed inset-0 bg-black bg-opacity-75 hidden items-center justify-center z-50 flex">
    <div class="relative max-w-4xl w-full mx-4">
        <img id="modalImage" src="" alt="Büyük Görüntü" class="w-full h-auto rounded-lg shadow-xl" />
        <button onclick="closeModal()" class="absolute top-4 right-4 text-white hover:text-gray-300">
            <i class="fas fa-times text-2xl"></i>
        </button>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        // Form gönderilmeden önce kontrol
        document.querySelector('form').addEventListener('submit', function(e) {
            const mainPhotoInput = document.getElementById('mainPhotoInput');
            const additionalPhotosInput = document.getElementById('additionalPhotosInput');
            const currentMainPhoto = document.getElementById('currentMainPhoto').value;
            
            // Ana fotoğraf için kontrol
            if (!mainPhotoInput.files || mainPhotoInput.files.length === 0) {
                // Yeni fotoğraf seçilmemişse, mevcut fotoğrafı hidden input'a ekle
                const hiddenMainPhoto = document.createElement('input');
                hiddenMainPhoto.type = 'hidden';
                hiddenMainPhoto.name = 'MatchNewsMainPhoto';
                hiddenMainPhoto.value = currentMainPhoto;
                this.appendChild(hiddenMainPhoto);
            }

            // Ek fotoğraflar için kontrol
            if (!additionalPhotosInput.files || additionalPhotosInput.files.length === 0) {
                // Mevcut ek fotoğrafları hidden input'a ekle
                const currentPhotos = document.querySelectorAll('#additionalPhotosPreview img');
                currentPhotos.forEach((img, index) => {
                    const hiddenPhoto = document.createElement('input');
                    hiddenPhoto.type = 'hidden';
                    hiddenPhoto.name = `ExistingPhotos[${index}].PhotoUrl`;
                    hiddenPhoto.value = img.src;
                    this.appendChild(hiddenPhoto);
                });
            }
        });

        // Ana fotoğraf önizleme
        function previewMainPhoto(input) {
            const preview = document.getElementById('mainPhotoPreview');
            const currentPhoto = document.getElementById('currentMainPhoto').value;
            
            if (!input.files || !input.files[0]) {
                // Eğer yeni fotoğraf seçilmediyse, mevcut fotoğrafı koru
                if (currentPhoto) {
                    preview.innerHTML = `
                        <div class="relative group">
                            <img src="${currentPhoto}" alt="Ana Fotoğraf" 
                                 class="h-24 w-24 object-cover rounded cursor-pointer" 
                                 onclick="openModal('${currentPhoto}')" />
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                                <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                            </div>
                        </div>
                    `;
                }
                return;
            }

            preview.innerHTML = ''; // Mevcut önizlemeyi temizle
            const reader = new FileReader();
            const file = input.files[0];
            
            // GUID ile yeni dosya adı oluştur
            const newFileName = "main_" + generateGuid() + "_" + file.name;
            const newFile = new File([file], newFileName, { type: file.type });
            
            // DataTransfer ile dosyayı güncelle
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(newFile);
            input.files = dataTransfer.files;

            reader.onload = function(e) {
                const div = document.createElement('div');
                div.className = 'relative group';
                div.innerHTML = `
                    <img src="${e.target.result}" alt="Ana Fotoğraf" 
                         class="h-24 w-24 object-cover rounded cursor-pointer" 
                         onclick="openModal('${e.target.result}')" />
                    <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                        <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                    </div>
                `;
                preview.appendChild(div);
            }
            reader.readAsDataURL(file);
        }

        // Ek fotoğraflar önizleme
        function previewAdditionalPhotos(input) {
            const preview = document.getElementById('additionalPhotosPreview');
            const currentPhotos = document.querySelectorAll('#additionalPhotosPreview img');
            
            if (!input.files || input.files.length === 0) {
                // Eğer yeni fotoğraf seçilmediyse, mevcut fotoğrafları koru
                if (currentPhotos.length > 0) {
                    preview.innerHTML = '';
                    currentPhotos.forEach(img => {
                        const div = document.createElement('div');
                        div.className = 'relative group';
                        div.innerHTML = `
                            <img src="${img.src}" alt="Haber Fotoğrafı" 
                                 class="h-24 w-full object-cover rounded cursor-pointer" 
                                 onclick="openModal('${img.src}')" />
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                                <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                            </div>
                        `;
                        preview.appendChild(div);
                    });
                }
                return;
            }

            preview.innerHTML = ''; // Mevcut fotoğrafları temizle

            if (input.files && input.files.length > 0) {
                const newPhotos = [];
                
                // Seçilen dosyaları işle
                Array.from(input.files).forEach(file => {
                    // GUID ile yeni dosya adı oluştur
                    const newFileName = generateGuid() + "_" + file.name;
                    const newFile = new File([file], newFileName, { type: file.type });
                    newPhotos.push(newFile);

                    // Önizleme oluştur
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const div = document.createElement('div');
                        div.className = 'relative group';
                        div.innerHTML = `
                            <img src="${e.target.result}" alt="Haber Fotoğrafı" 
                                 class="h-24 w-full object-cover rounded cursor-pointer" 
                                 onclick="openModal('${e.target.result}')" />
                            <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-200 rounded flex items-center justify-center">
                                <i class="fas fa-search-plus text-white opacity-0 group-hover:opacity-100 transition-opacity duration-200"></i>
                            </div>
                        `;
                        preview.appendChild(div);
                    }
                    reader.readAsDataURL(file);
                });

                // DataTransfer ile dosyaları güncelle
                const dataTransfer = new DataTransfer();
                newPhotos.forEach(file => dataTransfer.items.add(file));
                input.files = dataTransfer.files;
            }
        }

        // GUID oluşturma fonksiyonu
        function generateGuid() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = Math.random() * 16 | 0;
                const v = c === 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }

        // Fotoğraf silme fonksiyonu
        function deletePhoto(photoId, buttonElement) {
            if (confirm('Bu fotoğrafı silmek istediğinizden emin misiniz?')) {
                fetch(`/MatchNews/DeletePhoto/${photoId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                })
                .then(response => {
                    if (response.ok) {
                        // Başarılı silme işlemi
                        const photoContainer = buttonElement.closest('.relative');
                        photoContainer.remove();
                    } else {
                        alert('Fotoğraf silinirken bir hata oluştu.');
                    }
                })
                .catch(error => {
                    console.error('Hata:', error);
                    alert('Fotoğraf silinirken bir hata oluştu.');
                });
            }
        }

        // Şehir ve Takım alanlarını Ana Haber'e göre göster/gizle
        function toggleCityTeamFields() {
            var isMain = document.getElementById('IsMainNews').checked;
            document.getElementById('city-team-fields').style.display = isMain ? 'none' : 'grid';
        }
        document.getElementById('IsMainNews').addEventListener('change', toggleCityTeamFields);
        // Sayfa yüklendiğinde ilk durumu ayarla
        toggleCityTeamFields();

        // Şehir değişince takımları getir
        document.getElementById('CityID').addEventListener('change', function () {
            var cityId = this.value;
            var teamSelect = document.getElementById('TeamID');
            teamSelect.innerHTML = '<option value="">Takım Seçiniz</option>';
            if (cityId) {
                fetch('/MatchNews/GetTeamsByCity?cityId=' + cityId)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(function (team) {
                            var opt = document.createElement('option');
                            opt.value = team.teamID;
                            opt.text = team.name;
                            teamSelect.appendChild(opt);
                        });
                    });
            }
        });
    </script>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />